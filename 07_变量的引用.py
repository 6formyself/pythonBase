def add(b):
    print("传进来的地址为:%s" % id(b))
    return b + 1


a = 1
print("a的地址为:%s" % id(a))
add(a)
"""
  a -> 1;传给add函数的是a的值,进行+1操作后会将操作完的数字的地址返回,即返回2的地址.
  不可变类型:[数字类型,字符串,元组].内存中的值不能改变,对该类变量操作后会开辟新的内存
"""
print(a)  # a的地址还是1的地址,所以a=1

####################################################


def change(k):
    k[1] = 10000
    return k


s = [1, 2, 3, 4, 5]
change(s)
"""
  s -> [1, 2, 3, 4, 5],传给函数的是该列表的地址,函数会改变内存中列表的值,所以,s指向的列表数据会发生改变
  可变类型:[列表,字典],内存中的值能改变,对该类变量操作后会改变内存中的值,并不会开辟新的内存
"""
print(s)

hash((1,))  # hash函数提取数据的特征值,返回一个整数,只能获取不可变数据的hash值
